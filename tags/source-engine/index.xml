<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>source-engine on nyancat0131</title><link>https://nyancat0131.moe/tags/source-engine/</link><description>Recent content in source-engine on nyancat0131</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 27 Jan 2022 16:58:00 +0700</lastBuildDate><atom:link href="https://nyancat0131.moe/tags/source-engine/index.xml" rel="self" type="application/rss+xml"/><item><title>Source Engine Exploitation: (Un)restricted file upload strikes again</title><link>https://nyancat0131.moe/source-engine/vpk-upload/</link><pubDate>Thu, 27 Jan 2022 16:58:00 +0700</pubDate><guid>https://nyancat0131.moe/source-engine/vpk-upload/</guid><description>Introduction This post will cover the exploitation chain I used to attack Source 1 Dedicated Servers. I have verified the exploit against these games:
Left 4 Dead Left 4 Dead 2 Counter-Strike: Global Offensive Source Engine file system Source Engine allows games to &amp;ldquo;mount&amp;rdquo; multiple directories as the file search path. For example, we have a and b directories. When we mount those directories to the file system, the game will access both directories under the same virtual root (like virtually merging these directories).</description></item><item><title>ALLES! CTF 2021 - ðŸ”¥ Counter Strike: Squirrel Offensive</title><link>https://nyancat0131.moe/ctf-writeups/alles-ctf/2021/csgo/</link><pubDate>Mon, 06 Sep 2021 07:30:12 +0000</pubDate><guid>https://nyancat0131.moe/ctf-writeups/alles-ctf/2021/csgo/</guid><description>This challenge involves an old version of CS:GO VScript, which is vulnerable to a UAF bug and a type confusion bug.
Resources on VScript can be found here.
Here is the exploit script.
UAF by resizing array in sort compare function The sort function of squirrel array is array_sort in sqbaselib.cpp, which will call _qsort:
// v: VM, o: array object, func: compare func _qsort(v, o, 0, _array(o)-&amp;gt;Size()-1, func); The r index passed into _qsort is fixed at the beginning, so by abusing array.</description></item></channel></rss>